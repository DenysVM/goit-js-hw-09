{"mappings":"AAGwB,SAAfA,EAAYC,GACjB,MAAMC,EAAaC,aAAY,KAC3B,MAAMC,EAAgBC,uBAAuBJ,GACzCG,EACAE,mBAAmBF,IAEnBG,cAAcL,GACdM,YAAYC,gBAAgB,Y,GAEjC,KAEoC,OAAhCP,C,CAIE,MAAPQ,EAAU,CACZC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACJ,MAAMC,EAAUD,EAAc,GAC9B,GAAIC,EAAS,CAEyCA,EAA1CC,SAAS,EAAG,EAAG,EAAG,GAE1B,MAAMC,GAAc,IAAIN,MAAOO,UAE/B,GADgBH,EAAQG,WACTD,EAGX,YADoDE,SAA3CC,OAAOC,QAAQ,UAAW,qCAAsC,MAG7EhB,YAAYC,gBAAgB,YAC5BH,mBAAmBD,uBAAuBa,IAC1C,MAAMhB,EAAaF,EAAYkB,GACLV,YAAdiB,iBAAiB,SAAS,KAClClB,cAAcL,GACoBM,YAAtBkB,aAAa,YAAY,GACrC,MAAMzB,EAAU0B,UAAUC,UAAUC,eAAeC,OACnD,GAAI7B,EAAS,CAEyCA,EAA1CkB,SAAS,EAAG,EAAG,EAAG,GAC1Bb,mBAAmBD,uBAAuBJ,IAC1C,MAAM8B,EAAgB/B,EAAYC,GACGC,EAAxB6B,C,QAOjCJ,UAAU,mBAAoBjB","sources":["src/js/02-timer.js"],"sourcesContent":["// ... (предыдущий код)\n\n// Функция обновления таймера\nfunction updateTimer(endDate) {\n    const intervalId = setInterval(() => {\n        const timeRemaining = calculateTimeRemaining(endDate);\n        if (timeRemaining) {\n            updateTimerDisplay(timeRemaining);\n        } else {\n            clearInterval(intervalId);\n            startButton.removeAttribute(\"disabled\");\n        }\n    }, 1000); // Обновляем таймер каждую секунду (1000 миллисекунд)\n\n    return intervalId; // Возвращаем ID интервала, чтобы можно было его остановить, если нужно\n}\n\n// Инициализация flatpickr\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const endDate = selectedDates[0];\n        if (endDate) {\n            // Устанавливаем время для endDate в 00:00:00, чтобы не учитывать текущее время\n            endDate.setHours(0, 0, 0, 0);\n\n            const currentTime = new Date().getTime();\n            const endTime = endDate.getTime();\n            if (endTime <= currentTime) {\n                // Если выбранная дата в прошлом, показываем сообщение с помощью notiflix\n                Notiflix.Report.warning(\"Warning\", \"Please choose a date in the future\", \"OK\");\n                return;\n            }\n            startButton.removeAttribute(\"disabled\");\n            updateTimerDisplay(calculateTimeRemaining(endDate));\n            const intervalId = updateTimer(endDate); // Запускаем обновление таймера\n            startButton.addEventListener(\"click\", () => {\n                clearInterval(intervalId); // Останавливаем таймер по клику на кнопку \"Start\"\n                startButton.setAttribute(\"disabled\", true);\n                const endDate = flatpickr.parseDate(datetimePicker.value);\n                if (endDate) {\n                    // Устанавливаем время для endDate в 00:00:00, чтобы не учитывать текущее время\n                    endDate.setHours(0, 0, 0, 0);\n                    updateTimerDisplay(calculateTimeRemaining(endDate));\n                    const newIntervalId = updateTimer(endDate); // Запускаем обновление таймера с новой датой\n                    intervalId = newIntervalId; // Обновляем ID интервала\n                }\n            });\n        }\n    },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\n"],"names":["$40d383fb392a7037$var$updateTimer","endDate","intervalId","setInterval","timeRemaining","calculateTimeRemaining","updateTimerDisplay","clearInterval","startButton","removeAttribute","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","endDate1","setHours","currentTime","getTime","Notiflix","Report","warning","addEventListener","setAttribute","flatpickr","parseDate","datetimePicker","value","newIntervalId"],"version":3,"file":"02-timer.54599135.js.map"}